


buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.2'
    }
}

apply plugin: 'android'


dependencies {
    // Add the support lib that is appropriate for SDK 18
    compile 'com.android.support:support-v13:19.1.+'
    compile files('libs/android-async-http-1.4.9.jar')
    androidTestCompile files('libs/junit-4.12.jar')
    compile files('libs/nanohttpd-webserver-2.1.1.jar')
    compile files('libs/nanohttpd-2.1.1.jar')
    //compile 'cz.msebera.android:httpclient:4.3.6'
    compile files('libs/httpclient-4.3.6.jar')
    //    compile fileTree(dir: 'libs', include: ['*.jar'])
    //    testCompile 'junit:junit:4.12'
    //    compile 'com.android.support:appcompat-v7:24.2.1'
    //    compile 'com.loopj.android:android-async-http:1.4.9'
    //    compile 'com.nanohttpd:nanohttpd-webserver:2.1.1'
}

// The sample build uses multiple directories to
// keep boilerplate and common code separate from
// the main sample code.
List<String> dirs = [
    'main',     // main sample code; look here for the interesting stuff.
    'common',   // components that are reused by multiple samples
    'template'] // boilerplate code that is generated by the sample template process

android {
    compileSdkVersion 25

    buildToolsVersion "25.0.0"

    sourceSets {
        main {
            dirs.each { dir ->
                java.srcDirs "src/${dir}/java"
                res.srcDirs "src/${dir}/res"
            }
        }
        androidTest.setRoot('tests')
        androidTest.java.srcDirs = ['tests/src']

    }
}















